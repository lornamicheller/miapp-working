/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, forwardRef, Input, ElementRef, Renderer } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { ModalController } from '@ionic/angular';
import { IonicTimepickerModalComponent } from './ionic-timepicker-modal/ionic-timepicker-modal.component';
/** @type {?} */
var noop = (/**
 * @return {?}
 */
function () {
});
var ɵ0 = noop;
/** @type {?} */
export var CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR = {
    provide: NG_VALUE_ACCESSOR,
    useExisting: forwardRef((/**
     * @return {?}
     */
    function () { return IonicTimepickerComponent; })),
    multi: true,
};
var IonicTimepickerComponent = /** @class */ (function () {
    function IonicTimepickerComponent(modalCtrl, el, renderer) {
        this.modalCtrl = modalCtrl;
        this.el = el;
        this.renderer = renderer;
        this.innerValue = '';
        // Placeholders for the callbacks which are later provided
        // by the Control Value Accessor
        this.onTouchedCallback = noop;
        this.onChangeCallback = noop;
    }
    /**
     * @return {?}
     */
    IonicTimepickerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.inputTimeConfig.clearButton !== false) {
            this.closeIcon = document.createElement('ion-icon');
            this.closeIcon.name = 'close-circle';
            this.closeIcon.className = 'clearButton';
            this.closeIcon.style.position = 'absolute';
            this.closeIcon.style.right = '8px';
            this.closeIcon.style.bottom = '0px';
            this.closeIcon.style.fontSize = '18px';
            this.closeIcon.style.zIndex = '5';
            this.closeIcon.style.color = '#A9A9A9';
            if (!this.value) {
                this.closeIcon.style.visibility = 'hidden';
            }
            if (this.el.nativeElement.parentNode.nodeName === 'ION-ITEM') {
                this.closeIcon.style.bottom = '30%';
            }
            this.el.nativeElement.setAttribute('style', 'position: relative; width: 100%;');
            this.el.nativeElement.appendChild(this.closeIcon);
            this.renderer.listen(this.closeIcon, 'click', (/**
             * @param {?} event
             * @return {?}
             */
            function (event) {
                // console.log('button clicks');
                _this.selectedTime = '';
                _this.value = '';
            }));
        }
    };
    // calls when input value has been changed.
    // calls when input value has been changed.
    /**
     * @param {?} value
     * @return {?}
     */
    IonicTimepickerComponent.prototype.onChangeValue = 
    // calls when input value has been changed.
    /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        // console.log('onChangeValue =>' , value);
        if (this.inputTimeConfig.clearButton || this.inputTimeConfig.clearButton === undefined) {
            if (!value) {
                this.closeIcon.style.visibility = 'hidden';
            }
            else {
                this.closeIcon.style.visibility = 'visible';
            }
        }
    };
    // open time picker
    // open time picker
    /**
     * @param {?} value
     * @return {?}
     */
    IonicTimepickerComponent.prototype.openTimePicker = 
    // open time picker
    /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var myTimePickerModal;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        // console.log('open time picker modal calls');
                        if (value) {
                            this.selectedTime = value;
                        }
                        return [4 /*yield*/, this.modalCtrl.create({
                                component: IonicTimepickerModalComponent,
                                cssClass: 'li-ionic-timepicker',
                                componentProps: { 'objConfig': this.inputTimeConfig, 'selectedTime': this.selectedTime }
                            })];
                    case 1:
                        myTimePickerModal = _a.sent();
                        return [4 /*yield*/, myTimePickerModal.present()];
                    case 2:
                        _a.sent();
                        myTimePickerModal.onDidDismiss()
                            .then((/**
                         * @param {?} data
                         * @return {?}
                         */
                        function (data) {
                            // console.log(data);
                            if (data.data && data.data.time) {
                                _this.selectedTime = data.data.time;
                                _this.value = data.data.time;
                            }
                        }));
                        return [2 /*return*/];
                }
            });
        });
    };
    Object.defineProperty(IonicTimepickerComponent.prototype, "value", {
        // get accessor
        get: 
        // get accessor
        /**
         * @return {?}
         */
        function () {
            return this.innerValue;
        },
        // set accessor including call the onchange callback
        set: 
        // set accessor including call the onchange callback
        /**
         * @param {?} v
         * @return {?}
         */
        function (v) {
            if (v !== this.innerValue) {
                this.innerValue = v;
                this.onChangeCallback(v);
            }
            this.onChangeValue(v);
        },
        enumerable: true,
        configurable: true
    });
    // Set touched on blur
    // Set touched on blur
    /**
     * @return {?}
     */
    IonicTimepickerComponent.prototype.onBlur = 
    // Set touched on blur
    /**
     * @return {?}
     */
    function () {
        this.onTouchedCallback();
    };
    // From ControlValueAccessor interface
    // From ControlValueAccessor interface
    /**
     * @param {?} value
     * @return {?}
     */
    IonicTimepickerComponent.prototype.writeValue = 
    // From ControlValueAccessor interface
    /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (value !== this.innerValue) {
            this.innerValue = value;
        }
        this.onChangeValue(value);
    };
    // From ControlValueAccessor interface
    // From ControlValueAccessor interface
    /**
     * @param {?} fn
     * @return {?}
     */
    IonicTimepickerComponent.prototype.registerOnChange = 
    // From ControlValueAccessor interface
    /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onChangeCallback = fn;
    };
    // From ControlValueAccessor interface
    // From ControlValueAccessor interface
    /**
     * @param {?} fn
     * @return {?}
     */
    IonicTimepickerComponent.prototype.registerOnTouched = 
    // From ControlValueAccessor interface
    /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onTouchedCallback = fn;
    };
    /**
     * @param {?} isDisabled
     * @return {?}
     */
    IonicTimepickerComponent.prototype.setDisabledState = /**
     * @param {?} isDisabled
     * @return {?}
     */
    function (isDisabled) {
        throw new Error('Method not implemented.');
    };
    IonicTimepickerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'li-ionic-timepicker',
                    template: "<input type=\"text\" (focus)=\"$event.preventDefault()\" (click)=\"openTimePicker(value)\" readonly [(ngModel)]=\"value\" start />",
                    providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR],
                    styles: ["input{font-size:16px;border:0;border-bottom:1px solid #ccc;width:100%;padding:8px}@media (min-width:768px){input{font-size:18px}}input.has-focus,input:focus{outline:0;box-shadow:unset}"]
                }] }
    ];
    /** @nocollapse */
    IonicTimepickerComponent.ctorParameters = function () { return [
        { type: ModalController },
        { type: ElementRef },
        { type: Renderer }
    ]; };
    IonicTimepickerComponent.propDecorators = {
        inputTimeConfig: [{ type: Input }]
    };
    return IonicTimepickerComponent;
}());
export { IonicTimepickerComponent };
if (false) {
    /** @type {?} */
    IonicTimepickerComponent.prototype.inputTimeConfig;
    /** @type {?} */
    IonicTimepickerComponent.prototype.closeIcon;
    /**
     * @type {?}
     * @private
     */
    IonicTimepickerComponent.prototype.innerValue;
    /** @type {?} */
    IonicTimepickerComponent.prototype.selectedTime;
    /**
     * @type {?}
     * @private
     */
    IonicTimepickerComponent.prototype.onTouchedCallback;
    /**
     * @type {?}
     * @private
     */
    IonicTimepickerComponent.prototype.onChangeCallback;
    /** @type {?} */
    IonicTimepickerComponent.prototype.modalCtrl;
    /** @type {?} */
    IonicTimepickerComponent.prototype.el;
    /** @type {?} */
    IonicTimepickerComponent.prototype.renderer;
}
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,